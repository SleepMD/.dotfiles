# SOURCES
# https://starship.rs/config
# https://starship.rs/presets/nerd-font.html#configuration

# DEBUG via:
# starship explain
# STARSHIP_LOG=trace

"$schema" = 'https://starship.rs/config-schema.json'

# Timeout for commands executed by starship (ms)
command_timeout = 1000

# newline between commands
add_newline = true

# ! opt-in for individual modules (e.g., aws, docker, gcloud, nodejs, python)
# standalone format to get os glyph on ps1 line,
# prompt character below
format = """
$os$username$hostname:$directory$git_branch$git_status$git_commit$python$cmd_duration
$character
"""
## FIRST LINE/ROW: Info & Status
# First param ─┌
[username]
format = " [╭─$user]($style)@"
style_user = "bold red"
style_root = "bold red"
show_always = true
#  format = '[$user]($style)'
#  style_root = 'fg:190 bold'
#  style_user = 'fg:226 bold'
disabled = false

# Second param
[hostname]
format = "[$hostname]($style) in "
style = "bold dimmed red"
trim_at = "-"
ssh_only = false
disabled = false
#  format = '[$hostname]($style)'
#  style = 'fg:81 bold'

# Third param
[directory]
#  style = "purple"
truncate_to_repo = true
truncation_symbol = "repo: "
truncation_length = 3
fish_style_pwd_dir_length = 0
use_logical_path = true
format = '[$path]($style)[$read_only]($read_only_style)'
style = 'fg:85 bold'
disabled = false
#  read_only = '🔒'
read_only_style = 'red'
#  truncation_symbol = '.../'
home_symbol = '~'
read_only = " "

# Before all the version info (python, nodejs, php, etc.)
[git_status]
style = "white"
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"
deleted = "x"
format = '([\[$all_status$ahead_behind\]]($style) )'
#  style = 'red bold'
stashed = '\$'
#  ahead = '⇡'
#  behind = '⇣'
#  diverged = '⇕'
conflicted = '='
#  deleted = '✘'
renamed = '»'
modified = '!'
staged = '+'
untracked = '?'
disabled = true

# Last param in the first line/row
[cmd_duration]
format = "took [$duration]($style)"
disabled = false
min_time = 2000
#  format = '\([$duration]($style)\) '
style = 'yellow bold'
show_milliseconds = true
show_notifications = false
min_time_to_notify = 45000

## SECOND LINE/ROW: Prompt
# Somethere at the beginning
[battery]
full_symbol = " "
charging_symbol = " "
discharging_symbol = " "
disabled = true

[[battery.display]]  # "bold red" style when capacity is between 0% and 10%
threshold = 15
style = "bold red"
disabled = true

[[battery.display]]  # "bold yellow" style when capacity is between 10% and 30%
threshold = 50
style = "bold yellow"
disabled = true

[[battery.display]]  # "bold green" style when capacity is between 10% and 30%
threshold = 80
style = "bold green"
disabled = true

# Prompt: optional param 1
[time]
format = " 🕙 $time($style)\n"
#  time_format = "%T"
style = "bright-white"
disabled = true
#  format = '[$time]($style)'
#  style = 'bold fg:202'
use_12hr = false
utc_time_offset = 'local'
time_range = '-'
time_format = '%T %d/%m'


# Prompt: param 2 └─
[character]
success_symbol = " [╰─λ](bold red)"
error_symbol = " [×](bold red)"
format = '$symbol '
#  success_symbol = '[❯](bold green)'
#  error_symbol = '[❯](bold red)'
vicmd_symbol = '[❮](bold green)'
disabled = false

# SYMBOLS
[status]
#  symbol = "🔴"
format = '[\[$symbol$status_common_meaning$status_signal_name$status_maybe_int\]]($style)'
map_symbol = true
disabled = false
#  format = '[status](bright-red): [$status]($style) '
symbol = '✖'
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
sigint_symbol = '🧱'
signal_symbol = '⚡'
style = 'bold red'
recognize_signal_code = true

[conda]
#  symbol = " "
truncation_length = 1
format = 'via [$symbol$environment]($style) '
symbol = '🅒 '
style = 'green bold'
ignore_base = true
disabled = true

[dart]
symbol = " "
format = 'via [$symbol($version )]($style)'
#  symbol = '🎯 '
style = 'bold blue'
disabled = true
detect_extensions = ['dart']
detect_files = [
    'pubspec.yaml',
    'pubspec.yml',
    'pubspec.lock',
]
detect_folders = ['.dart_tool']

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_folders = []
disabled = false
#  symbol = '🐳 '
detect_extensions = []
detect_files = [
    'docker-compose.yml',
    'docker-compose.yaml',
    'Dockerfile',
]

[elixir]
symbol = " "
format = 'via [$symbol($version \(OTP $otp_version\) )]($style)'
#  symbol = '💧 '
#  style = 'bold purple'
disabled = true
detect_extensions = []
detect_files = ['mix.exs']
detect_folders = []

[elm]
symbol = " "
format = 'via [$symbol($version )]($style)'
#  symbol = '🌳 '
#  style = 'cyan bold'
disabled = true
detect_extensions = ['elm']
detect_files = [
    'elm.json',
    'elm-package.json',
    '.elm-version',
]
detect_folders = ['elm-stuff']

[git_branch]
symbol = " "
format = 'on [$symbol$branch]($style)(:[$remote]($style)) '
#  symbol = ' '
style = 'bold purple'
truncation_length = 9223372036854775807
truncation_symbol = '…'
only_attached = false
always_show_remote = false
disabled = true

[golang]
symbol = " "
format = 'via [$symbol($version )]($style)'
#  symbol = '🐹 '
style = 'bold cyan'
disabled = true
detect_extensions = ['go']
detect_files = [
    'go.mod',
    'go.sum',
    'glide.yaml',
    'Gopkg.yml',
    'Gopkg.lock',
    '.go-version',
]
detect_folders = ['Godeps']

[hg_branch]
#symbol = " "
symbol = ' '
style = 'bold purple'
format = 'on [$symbol$branch]($style) '
truncation_length = 9223372036854775807
truncation_symbol = '…'
disabled = true

[java]
#  symbol = " "
disabled = true
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
style = 'red dimmed'
symbol = '☕ '
detect_extensions = [
    'java',
    'class',
    'jar',
    'gradle',
    'clj',
    'cljc',
]
detect_files = [
    'pom.xml',
    'build.gradle.kts',
    'build.sbt',
    '.java-version',
    'deps.edn',
    'project.clj',
    'build.boot',
]
detect_folders = []

[julia]
symbol = " "
format = 'via [$symbol($version )]($style)'
#symbol = 'ஃ '
style = 'bold purple'
disabled = true
detect_extensions = ['jl']
detect_files = [
    'Project.toml',
    'Manifest.toml',
]
detect_folders = []

[haskell]
symbol = "λ "

[memory_usage]
symbol = " "
threshold = 75
format = 'via $symbol[$ram( | $swap)]($style) '
style = 'white bold dimmed'
#  symbol = '🐏 '
disabled = true

[nim]
symbol = " "
format = 'via [$symbol($version )]($style)'
#  symbol = '👑 '
style = 'yellow bold'
disabled = true
detect_extensions = [
    'nim',
    'nims',
    'nimble',
]
detect_files = ['nim.cfg']
detect_folders = []

[nix_shell]
symbol = " "
format = 'via [$symbol$state( \($name\))]($style) '
style = 'bold blue'
impure_msg = 'impure'
pure_msg = 'pure'
disabled = true

[nodejs]
#  format = "via [ Node.js $version](bold green) "
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
symbol = ' '
style = 'bold green'
disabled = true
not_capable_style = 'bold red'
detect_extensions = [
    'js',
    'mjs',
    'cjs',
    'ts',
]
detect_files = [
    'package.json',
    '.node-version',
    '.nvmrc',
]
detect_folders = ['node_modules']

[os]
format = '[$symbol](bold white)'
disabled = false

[os.symbols]
Alpaquita = " "
Alpine = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Windows = "󰍲 "

[package]
#  symbol = " "
format = 'is [$symbol$version]($style) '
symbol = '📦 '
style = '208 bold'
display_private = false
disabled = true

[perl]
symbol = " "
#  symbol = '🐪 '
style = '149 bold'
format = 'via [$symbol($version )]($style)'
disabled = true
detect_extensions = [
    'pl',
    'pm',
    'pod',
]
detect_files = [
    'Makefile.PL',
    'Build.PL',
    'cpanfile',
    'cpanfile.snapshot',
    'META.json',
    'META.yml',
    '.perl-version',
]
detect_folders = []

[php]
symbol = " "
#  symbol = '🐘 '
style = '147 bold'
format = 'via [$symbol($version )]($style)'
disabled = true
detect_extensions = ['php']
detect_files = [
    'composer.json',
    '.php-version',
]
detect_folders = []

[python]
symbol = " "
#pyenv_version_name = true
style = "bold yellow"
detect_extensions = ["py"]
pyenv_version_name = false
pyenv_prefix = 'pyenv '
python_binary = [
    'python',
    'python3',
    'python2',
]
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
version_format = 'v${raw}'
#  symbol = '🐍 '
disabled = true
detect_files = [
    'requirements.txt',
    '.python-version',
    'pyproject.toml',
    'Pipfile',
    'tox.ini',
    'setup.py',
    '__init__.py',
]
detect_folders = []

[ruby]
symbol = " "
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
#  symbol = '💎 '
style = 'bold red'
disabled = true
detect_extensions = ['rb']
detect_files = [
    'Gemfile',
    '.ruby-version',
]
detect_folders = []

[rust]
symbol = " "
format = 'via [$symbol($version )]($style)'
version_format = 'v${raw}'
#  symbol = '🦀 '
style = 'bold red'
disabled = true
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []

[scala]
symbol = " "
disabled = true
format = 'via [$symbol($version )]($style)'
style = 'red bold'
#  symbol = '🆂 '
detect_extensions = [
    'sbt',
    'scala',
]
detect_files = [
    '.scalaenv',
    '.sbtenv',
    'build.sbt',
]
detect_folders = ['.metals']

[shlvl]
symbol = " "
threshold = 2
format = '[$symbol$shlvl]($style) '
#  symbol = '↕️  '
repeat = false
style = 'bold yellow'
disabled = true

[swift]
#  symbol = "ﯣ "
format = 'via [$symbol($version )]($style)'
symbol = '🐦 '
style = 'bold 202'
disabled = true
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []

[aws]
format = 'on [$symbol($profile )(\($region\) )]($style)'
symbol = "  "
# symbol = '☁️  '
style = 'bold yellow'
disabled = true

[aws.region_aliases]

[cmake]
format = 'via [$symbol($version )]($style)'
symbol = '△ '
style = 'bold blue'
disabled = true
detect_extensions = []
detect_files = [
    'CMakeLists.txt',
    'CMakeCache.txt',
]
detect_folders = []

[crystal]
format = 'via [$symbol($version )]($style)'
symbol = '🔮 '
style = 'bold red'
disabled = true
detect_extensions = ['cr']
detect_files = ['shard.yml']
detect_folders = []

[deno]
format = 'via [$symbol($version )]($style)'
symbol = '🦕 '
style = 'green bold'
disabled = true
detect_extensions = []
detect_files = [
    'mod.ts',
    'deps.ts',
    'mod.js',
    'deps.js',
]
detect_folders = []

[directory.substitutions]

[dotnet]
format = '[$symbol($version )(🎯 $tfm )]($style)'
symbol = '.NET '
style = 'blue bold'
heuristic = true
disabled = true
detect_extensions = [
    'sln',
    'csproj',
    'fsproj',
    'xproj',
]
detect_files = [
    'global.json',
    'project.json',
    'Directory.Build.props',
    'Directory.Build.targets',
    'Packages.props',
]
detect_folders = []

[env_var]
symbol = ''
style = 'black bold dimmed'
format = 'with [$env_value]($style) '
disabled = false

[erlang]
format = 'via [$symbol($version )]($style)'
symbol = ' '
style = 'bold red'
disabled = true
detect_extensions = []
detect_files = [
    'rebar.config',
    'erlang.mk',
]
detect_folders = []

[gcloud]
format = 'on [$symbol$account(\($region\))]($style) '
symbol = '☁️ '
style = 'bold blue'
disabled = true

[gcloud.region_aliases]

[git_commit]
commit_hash_length = 7
format = '[\($hash$tag\)]($style) '
style = 'green bold'
only_detached = true
disabled = true
tag_symbol = '🏷  '
tag_disabled = true

[git_state]
rebase = 'REBASING'
merge = 'MERGING'
revert = 'REVERTING'
cherry_pick = 'CHERRY-PICKING'
bisect = 'BISECTING'
am = 'AM'
am_or_rebase = 'AM/REBASE'
style = 'bold yellow'
format = '\([$state( $progress_current/$progress_total)]($style)\) '
disabled = true

[helm]
format = 'via [$symbol($version )]($style)'
symbol = '⎈ '
style = 'bold white'
disabled = true
detect_extensions = []
detect_files = [
    'helmfile.yaml',
    'Chart.yaml',
]
detect_folders = []

[jobs]
threshold = 1
format = '[$symbol$number]($style) '
symbol = '✦'
style = 'bold blue'
disabled = true

[kotlin]
format = 'via [$symbol($version )]($style)'
symbol = '🅺 '
style = 'bold blue'
kotlin_binary = 'kotlin'
disabled = true
detect_extensions = [
    'kt',
    'kts',
]
detect_files = []
detect_folders = []

[kubernetes]
symbol = '☸ '
format = '[$symbol$context( \($namespace\))]($style) in '
style = 'cyan bold'
disabled = true

[kubernetes.context_aliases]

[lua]
format = 'via [$symbol($version )]($style)'
symbol = '🌙 '
style = 'bold blue'
lua_binary = 'lua'
disabled = true
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']

[ocaml]
global_switch_indicator = ''
local_switch_indicator = '*'
format = 'via [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
symbol = '🐫 '
style = 'bold yellow'
disabled = true
detect_extensions = [
    'opam',
    'ml',
    'mli',
    're',
    'rei',
]
detect_files = [
    'dune',
    'dune-project',
    'jbuild',
    'jbuild-ignore',
    '.merlin',
]
detect_folders = [
    '_opam',
    'esy.lock',
]

[openstack]
format = 'on [$symbol$cloud(\($project\))]($style) '
symbol = '☁️  '
style = 'bold yellow'
disabled = true

[purescript]
format = 'via [$symbol($version )]($style)'
symbol = '<=> '
style = 'bold white'
disabled = true
detect_extensions = ['purs']
detect_files = ['spago.dhall']
detect_folders = []

[red]
format = 'via [$symbol($version )]($style)'
symbol = '🔺 '
style = 'red bold'
disabled = true
detect_extensions = [
    'red',
    'reds',
]
detect_files = []
detect_folders = []

[shell]
format = '$indicator '
bash_indicator = 'bsh'
fish_indicator = 'fsh'
zsh_indicator = 'zsh'
powershell_indicator = 'psh'
ion_indicator = 'ion'
elvish_indicator = 'esh'
tcsh_indicator = 'tsh'
disabled = true

[singularity]
symbol = ''
format = '[$symbol\[$env\]]($style) '
style = 'blue bold dimmed'
disabled = true

[terraform]
format = 'via [$symbol$workspace]($style) '
symbol = '💠 '
style = 'bold 105'
disabled = true
detect_extensions = [
    'tf',
    'hcl',
]
detect_files = []
detect_folders = ['.terraform']

[vagrant]
format = 'via [$symbol($version )]($style)'
symbol = '⍱ '
style = 'cyan bold'
disabled = true
detect_extensions = []
detect_files = ['Vagrantfile']
detect_folders = []

[zig]
format = 'via [$symbol($version )]($style)'
symbol = '↯ '
style = 'bold yellow'
disabled = true
detect_extensions = ['zig']
detect_files = []
detect_folders = []

[custom]



